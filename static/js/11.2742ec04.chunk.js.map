{"version":3,"sources":["utils/formatter/index.js","queries/projects/index.js","pages/Dashboard/DashboardIssues.js","queries/issues/index.js","pages/Dashboard/DashboardProjects.js","pages/Dashboard/Dashboard.js"],"names":["intToString","value","toFixed","URL","process","useQueryTopProjects","useQuery","axios","get","then","result","data","useQueryProjects","useQueryProject","id","Title","Typography","Paragraph","Text","DashboardIssues","props","useTranslation","t","isLoading","translate","useCallback","key","options","align","style","width","level","ContainerOutlined","marginRight","marginTop","margin","dataSource","renderItem","item","Item","justify","flex","gutter","span","textAlign","strong","to","repo","type","name","marginLeft","MessageOutlined","comments","tags","map","tag","placement","title","color","target","pathname","link","GithubOutlined","SelectOutlined","DashboardProjects","FundProjectionScreenOutlined","RightOutlined","fontSize","xs","sm","md","lg","height","display","flexDirection","bodyStyle","padding","actions","AppstoreOutlined","StarFilled","stars","ellipsis","rows","description","length","marginBottom","slice","languages","join","Dashboard","xl","className"],"mappings":"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","file":"static/js/11.2742ec04.chunk.js","sourcesContent":["export const intToString = (value = '') => {\n  if (value < 1e3) return value\n  if (value >= 1e3 && value < 1e6) return +(value / 1e3).toFixed(1) + 'K'\n  if (value >= 1e6 && value < 1e9) return +(value / 1e6).toFixed(1) + 'M'\n  if (value >= 1e9 && value < 1e12) return +(value / 1e9).toFixed(1) + 'B'\n  if (value >= 1e12) return +(value / 1e12).toFixed(1) + 'T'\n  return value\n}\n","import axios from 'axios'\n\nimport { useQuery } from 'react-query'\n\nconst URL = process.env.REACT_APP_BASE_URL\n\nexport const useQueryTopProjects = () =>\n  useQuery(['queryTopProjects'], () =>\n    axios.get(`${URL}/top-projects`).then(result => result.data)\n  )\n\nexport const useQueryProjects = () =>\n  useQuery(['queryProjects'], () =>\n    axios.get(`${URL}/projects`).then(result => result.data)\n  )\n\nexport const useQueryProject = ({ id }) =>\n  useQuery(['queryProject'], () =>\n    axios.get(`${URL}/projects/${id}`).then(result => result.data)\n  )\n","import React, { useCallback } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport { Col, Row, Tag, List, Divider, Tooltip, Typography } from 'antd'\nimport {\n  GithubOutlined,\n  SelectOutlined,\n  MessageOutlined,\n  ContainerOutlined\n} from '@ant-design/icons'\n\nimport { Loading } from 'components'\nimport { useQueryRecentsIssues } from 'queries/issues'\n\nconst { Title, Paragraph, Text } = Typography\n\nexport const DashboardIssues = ({ ...props }) => {\n  const [t] = useTranslation()\n\n  const { data = [], isLoading } = useQueryRecentsIssues()\n\n  const translate = useCallback(\n    (key, options) => t(`dashboard:${key}`, options),\n    [t]\n  )\n\n  return (\n    <Row {...props}>\n      <Row align='middle' style={{ width: '100%' }}>\n        <Title level={3}>\n          <ContainerOutlined style={{ marginRight: 10 }} />\n          {translate('recentIssues')}\n        </Title>\n      </Row>\n\n      <Divider style={{ marginTop: 0 }} />\n\n      {isLoading && (\n        <Row style={{ width: '100%' }}>\n          <Loading style={{ margin: '20px auto' }} />\n        </Row>\n      )}\n\n      {!isLoading && (\n        <Row style={{ width: '100%' }}>\n          <List\n            dataSource={data}\n            style={{ width: '100%' }}\n            renderItem={item => (\n              <List.Item>\n                <Row\n                  align='middle'\n                  justify='space-between'\n                  style={{ width: '100%' }}\n                >\n                  <Row style={{ flex: 1 }} align='middle' gutter={16}>\n                    <Col span={2} style={{ textAlign: 'center' }}>\n                      <Paragraph strong style={{ margin: 0 }}>\n                        {`#${item.id}`}\n                      </Paragraph>\n\n                      <Link to={`/projects/${item.repo.id}`}>\n                        <Paragraph type='secondary' style={{ margin: 0 }}>\n                          {item.repo.name}\n                        </Paragraph>\n                      </Link>\n                    </Col>\n\n                    <Col>\n                      <Paragraph style={{ margin: 0 }}>\n                        {item.name}\n                        <Text type='secondary' style={{ marginLeft: 10 }}>\n                          <MessageOutlined style={{ marginRight: 5 }} />\n                          {item.comments}\n                        </Text>\n                      </Paragraph>\n\n                      <Paragraph style={{ margin: 0 }}>\n                        {item.tags.map(tag => (\n                          <Tooltip\n                            key={tag}\n                            placement='bottom'\n                            title={translate(`tags:${tag}`)}\n                          >\n                            <Tag color='processing'>{tag}</Tag>\n                          </Tooltip>\n                        ))}\n                      </Paragraph>\n                    </Col>\n                  </Row>\n\n                  <Row align='middle'>\n                    <Link target='_blank' to={{ pathname: item.link }}>\n                      <Tooltip\n                        placement='bottom'\n                        title={translate('seeGithub')}\n                      >\n                        <Text>\n                          <GithubOutlined />\n                        </Text>\n                      </Tooltip>\n                    </Link>\n\n                    <Divider type='vertical' />\n\n                    <Tooltip\n                      placement='bottom'\n                      title={translate('openSession')}\n                    >\n                      <SelectOutlined />\n                    </Tooltip>\n                  </Row>\n                </Row>\n              </List.Item>\n            )}\n          />\n        </Row>\n      )}\n    </Row>\n  )\n}\n","import axios from 'axios'\n\nimport { useQuery } from 'react-query'\n\nconst URL = process.env.REACT_APP_BASE_URL\n\nexport const useQueryRecentsIssues = () =>\n  useQuery(['queryRecentIssues'], () =>\n    axios.get(`${URL}/recent-issues`).then(result => result.data)\n  )\n","import React, { useCallback } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport { Button, Card, Col, Divider, Row, Tag, Tooltip, Typography } from 'antd'\nimport {\n  StarFilled,\n  RightOutlined,\n  GithubOutlined,\n  SelectOutlined,\n  AppstoreOutlined,\n  FundProjectionScreenOutlined\n} from '@ant-design/icons'\n\nimport { Loading } from 'components'\nimport { intToString } from 'utils/formatter'\nimport { useQueryTopProjects } from 'queries/projects'\n\nconst { Title, Paragraph, Text } = Typography\n\nexport const DashboardProjects = ({ ...props }) => {\n  const [t] = useTranslation()\n\n  const { data = [], isLoading } = useQueryTopProjects()\n\n  const translate = useCallback(\n    (key, options) => t(`dashboard:${key}`, options),\n    [t]\n  )\n\n  return (\n    <Row {...props}>\n      <Row align='middle' justify='space-between' style={{ width: '100%' }}>\n        <Title level={3}>\n          <FundProjectionScreenOutlined style={{ marginRight: 10 }} />\n          {translate('topProjects')}\n        </Title>\n\n        <Link to='/projects'>\n          <Button type='link'>\n            {translate('seeProjects')}\n            <RightOutlined style={{ marginLeft: 5, fontSize: 12 }} />\n          </Button>\n        </Link>\n      </Row>\n\n      <Divider style={{ marginTop: 0 }} />\n\n      {isLoading && (\n        <Row style={{ width: '100%' }}>\n          <Loading style={{ margin: '20px auto' }} />\n        </Row>\n      )}\n\n      {!isLoading && (\n        <Row style={{ width: '100%' }} gutter={[16, 16]}>\n          {data.map(item => (\n            <Col xs={24} sm={12} md={8} lg={6} key={item.id}>\n              <Card\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column'\n                }}\n                bodyStyle={{ padding: '12px 16px', flex: 1 }}\n                actions={[\n                  <Tooltip key='github' title={translate('seeGithub')}>\n                    <Link to={{ pathname: item.link }} target='_blank'>\n                      <GithubOutlined />\n                    </Link>\n                  </Tooltip>,\n                  <Tooltip key='issues' title={translate('seeIssues')}>\n                    <Link to={`/projects/${item.id}`}>\n                      <AppstoreOutlined />\n                    </Link>\n                  </Tooltip>,\n                  <Tooltip key='session' title={translate('openSession')}>\n                    <SelectOutlined />\n                  </Tooltip>\n                ]}\n              >\n                <Row justify='space-between'>\n                  <Text strong>{item.name}</Text>\n\n                  <Text type='secondary'>\n                    <StarFilled style={{ marginRight: 3 }} />\n                    {intToString(item.stars)}\n                  </Text>\n                </Row>\n\n                <Row style={{ marginTop: 8 }}>\n                  <Paragraph type='secondary' ellipsis={{ rows: 2 }}>\n                    {item.description}\n                  </Paragraph>\n                </Row>\n\n                {item.tags.length > 0 && (\n                  <Row style={{ marginBottom: 8 }}>\n                    {item.tags.slice(0, 4).map(tag => (\n                      <Tag key={tag} color='processing'>\n                        {tag}\n                      </Tag>\n                    ))}\n\n                    {item.tags.length > 4 && (\n                      <Tooltip\n                        placement='bottom'\n                        title={\n                          <Row style={{ flexDirection: 'column' }}>\n                            {item.tags.slice(4, item.tags.length).map(tag => (\n                              <Paragraph\n                                key={tag}\n                                style={{ margin: 0, color: 'white' }}\n                              >\n                                {tag}\n                              </Paragraph>\n                            ))}\n                          </Row>\n                        }\n                      >\n                        <Tag color='processing'>{`+${\n                          item.tags.length - 4\n                        }`}</Tag>\n                      </Tooltip>\n                    )}\n                  </Row>\n                )}\n\n                <Row>\n                  <Text style={{ marginRight: 5 }}>\n                    {translate('languages')}\n                  </Text>\n                  <Text type='secondary'>\n                    {item.languages.slice(0, 5).join(', ')}\n                  </Text>\n                </Row>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Row>\n  )\n}\n","import React, { useCallback } from 'react'\n\nimport { useTranslation } from 'react-i18next'\n\nimport { Col, Row, Typography } from 'antd'\n\nimport { LogoIcon } from 'components/Icon'\n\nimport { DashboardIssues } from './DashboardIssues'\nimport { DashboardProjects } from './DashboardProjects'\n\nconst { Title } = Typography\n\nexport const Dashboard = () => {\n  const [t] = useTranslation()\n\n  const translate = useCallback(\n    (key, options) => t(`dashboard:${key}`, options),\n    [t]\n  )\n\n  return (\n    <>\n      <Row justify='center' style={{ width: '100%' }}>\n        <Col xs={24} sm={20} md={16} lg={14} xl={12}>\n          <Title\n            level={1}\n            className='ant-title-primary'\n            style={{ textAlign: 'center', fontSize: 68, marginBottom: 20 }}\n          >\n            <LogoIcon style={{ marginRight: 20 }} />\n            {translate('title')}\n          </Title>\n\n          <Title level={5} type='secondary' style={{ textAlign: 'center' }}>\n            {translate('subtitle')}\n          </Title>\n        </Col>\n      </Row>\n\n      <DashboardProjects style={{ marginTop: 50 }} />\n\n      <DashboardIssues style={{ marginTop: 100 }} />\n    </>\n  )\n}\n"],"sourceRoot":""}