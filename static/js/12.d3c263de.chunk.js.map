{"version":3,"sources":["utils/formatter/index.js","queries/projects/index.js","pages/Error500/Error500.js","pages/Projects/Details/ProjectsDetails.js"],"names":["intToString","value","toFixed","URL","process","useQueryTopProjects","useQuery","axios","get","then","result","data","useQueryProjects","useQueryProject","id","Text","Typography","Paragraph","Error500","title","description","goBack","buttonText","extra","useTranslation","t","history","useHistory","useEffect","setPageTitle","translate","useCallback","key","options","status","type","onClick","icon","RollbackOutlined","subTitle","ProjectsDetails","useParams","useState","page","setPage","isLoading","name","issues","useMemo","slice","goToProjects","push","style","margin","onBack","className","align","StarFilled","marginRight","stars","to","pathname","link","target","GithubOutlined","SelectOutlined","footer","defaultActiveKey","TabPane","tab","strong","languages","join","tags","length","marginTop","map","tag","color","width","dataSource","renderItem","item","Item","justify","flex","gutter","span","textAlign","marginLeft","MessageOutlined","comments","placement","size","current","pageSize","total","onChange"],"mappings":"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","file":"static/js/12.d3c263de.chunk.js","sourcesContent":["export const intToString = (value = '') => {\n  if (value < 1e3) return value\n  if (value >= 1e3 && value < 1e6) return +(value / 1e3).toFixed(1) + 'K'\n  if (value >= 1e6 && value < 1e9) return +(value / 1e6).toFixed(1) + 'M'\n  if (value >= 1e9 && value < 1e12) return +(value / 1e9).toFixed(1) + 'B'\n  if (value >= 1e12) return +(value / 1e12).toFixed(1) + 'T'\n  return value\n}\n","import axios from 'axios'\n\nimport { useQuery } from 'react-query'\n\nconst URL = process.env.REACT_APP_BASE_URL\n\nexport const useQueryTopProjects = () =>\n  useQuery(['queryTopProjects'], () =>\n    axios.get(`${URL}/top-projects`).then(result => result.data)\n  )\n\nexport const useQueryProjects = () =>\n  useQuery(['queryProjects'], () =>\n    axios.get(`${URL}/projects`).then(result => result.data)\n  )\n\nexport const useQueryProject = ({ id }) =>\n  useQuery(['queryProject'], () =>\n    axios.get(`${URL}/projects/${id}`).then(result => result.data)\n  )\n","import React, { useCallback, useEffect } from 'react'\n\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport { Button, Result, Typography } from 'antd'\nimport { RollbackOutlined } from '@ant-design/icons'\n\nimport { setPageTitle } from 'utils/control'\n\nconst { Text, Paragraph } = Typography\n\nexport const Error500 = ({ title, description, goBack, buttonText, extra }) => {\n  const [t] = useTranslation()\n  const history = useHistory()\n\n  useEffect(() => {\n    setPageTitle(t(`links:error500`))\n  }, [t])\n\n  const translate = useCallback(\n    (key, options) => t(`errors:500:${key}`, options),\n    [t]\n  )\n\n  const onClickBack = () => {\n    if (goBack) goBack()\n    else {\n      history.goBack()\n    }\n  }\n\n  return (\n    <Result\n      status='500'\n      title={title || translate('title')}\n      extra={\n        <Button\n          type='primary'\n          onClick={onClickBack}\n          icon={<RollbackOutlined />}\n        >\n          {buttonText || translate('back')}\n        </Button>\n      }\n      subTitle={\n        <>\n          <Text type='secondary'>\n            {description || translate('description')}\n          </Text>\n\n          <Paragraph type='secondary'>{extra || translate('extra')}</Paragraph>\n        </>\n      }\n    />\n  )\n}\n\nError500.propTypes = {\n  goBack: PropTypes.func,\n  extra: PropTypes.string,\n  title: PropTypes.string,\n  buttonText: PropTypes.string,\n  description: PropTypes.string\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport { useTranslation } from 'react-i18next'\nimport { Link, useHistory, useParams } from 'react-router-dom'\n\nimport {\n  StarFilled,\n  GithubOutlined,\n  SelectOutlined,\n  MessageOutlined\n} from '@ant-design/icons'\nimport {\n  Col,\n  Row,\n  Tag,\n  Tabs,\n  List,\n  Button,\n  Divider,\n  Tooltip,\n  Pagination,\n  Typography,\n  PageHeader\n} from 'antd'\n\nimport { Loading } from 'components'\nimport Error500 from 'pages/Error500'\nimport { setPageTitle } from 'utils/control'\nimport { intToString } from 'utils/formatter'\nimport { useQueryProject } from 'queries/projects'\n\nconst { Text, Paragraph } = Typography\n\nexport const ProjectsDetails = () => {\n  const [t] = useTranslation()\n  const history = useHistory()\n  const { id = '' } = useParams()\n\n  const [page, setPage] = useState(1)\n\n  const { data, isLoading } = useQueryProject({ id })\n\n  const pageSize = 20\n\n  useEffect(() => {\n    if (!isLoading && data) {\n      setPageTitle(`${t(`links:projects`)} | ${data.name}`)\n    }\n  }, [data, t, isLoading])\n\n  const translate = useCallback(\n    (key, options) => t(`projects:${key}`, options),\n    [t]\n  )\n\n  const issues = useMemo(() => {\n    if (data?.issues) {\n      return [...data?.issues.slice(pageSize * (page - 1), pageSize * page)]\n    }\n\n    return []\n  }, [data, page])\n\n  const goToProjects = () => history.push('/projects')\n\n  if (isLoading) {\n    return (\n      <Row>\n        <Loading style={{ margin: 'auto' }} />\n      </Row>\n    )\n  }\n\n  if (!data) {\n    return (\n      <Error500\n        goBack={goToProjects}\n        title={translate('noProject:title')}\n        extra={translate('noProject:extra')}\n        buttonText={translate('noProject:button')}\n        description={translate('noProject:description')}\n      />\n    )\n  }\n\n  return (\n    <>\n      <PageHeader\n        onBack={goToProjects}\n        className='site-page-header'\n        title={data?.name}\n        subTitle={\n          <Row align='middle'>\n            <StarFilled style={{ marginRight: 3 }} />\n            {intToString(data?.stars)}\n          </Row>\n        }\n        extra={[\n          <Link key='github' to={{ pathname: data?.link }} target='_blank'>\n            <Button icon={<GithubOutlined />}>{translate('seeGithub')}</Button>\n          </Link>,\n          <Button key='session' icon={<SelectOutlined />} type='primary'>\n            {translate('openSession')}\n          </Button>\n        ]}\n        footer={\n          <Tabs defaultActiveKey='issues'>\n            <Tabs.TabPane tab={translate('issues')} key='issues' />\n          </Tabs>\n        }\n      >\n        {data?.description}\n\n        <Row>\n          <Text style={{ marginRight: 5 }} strong>\n            {translate('languages')}\n          </Text>\n\n          <Text type='secondary'>{data?.languages.join(', ')}.</Text>\n        </Row>\n\n        {data?.tags?.length > 0 && (\n          <Row style={{ marginTop: 10 }}>\n            {data?.tags.map(tag => (\n              <Tag key={tag} color='processing'>\n                {tag}\n              </Tag>\n            ))}\n          </Row>\n        )}\n      </PageHeader>\n\n      <Row style={{ marginTop: '20px', width: '100%' }}>\n        <List\n          dataSource={issues}\n          style={{ width: '100%' }}\n          renderItem={item => (\n            <List.Item>\n              <Row\n                align='middle'\n                justify='space-between'\n                style={{ width: '100%' }}\n              >\n                <Row style={{ flex: 1 }} align='middle' gutter={16}>\n                  <Col span={2} style={{ textAlign: 'center' }}>\n                    <Paragraph strong style={{ margin: 0 }}>\n                      {`#${item.id}`}\n                    </Paragraph>\n                  </Col>\n\n                  <Col>\n                    <Paragraph style={{ margin: 0 }}>\n                      {item.name}\n                      <Text type='secondary' style={{ marginLeft: 10 }}>\n                        <MessageOutlined style={{ marginRight: 5 }} />\n                        {item.comments}\n                      </Text>\n                    </Paragraph>\n\n                    <Paragraph style={{ margin: 0 }}>\n                      {item.tags.map(tag => (\n                        <Tooltip\n                          key={tag}\n                          placement='bottom'\n                          title={translate(`tags:${tag}`)}\n                        >\n                          <Tag color='processing'>{tag}</Tag>\n                        </Tooltip>\n                      ))}\n                    </Paragraph>\n                  </Col>\n                </Row>\n\n                <Row align='middle'>\n                  <Link target='_blank' to={{ pathname: item.link }}>\n                    <Tooltip placement='bottom' title={translate('seeGithub')}>\n                      <Text>\n                        <GithubOutlined />\n                      </Text>\n                    </Tooltip>\n                  </Link>\n\n                  <Divider type='vertical' />\n\n                  <Tooltip placement='bottom' title={translate('openSession')}>\n                    <SelectOutlined />\n                  </Tooltip>\n                </Row>\n              </Row>\n            </List.Item>\n          )}\n        />\n      </Row>\n\n      <Row justify='end' style={{ marginTop: '20px' }}>\n        <Pagination\n          size='small'\n          current={page}\n          pageSize={pageSize}\n          total={data?.issues?.length}\n          onChange={value => setPage(value)}\n        />\n      </Row>\n    </>\n  )\n}\n"],"sourceRoot":""}